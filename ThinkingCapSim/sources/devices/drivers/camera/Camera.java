/** * Copyright: Copyright (c) 2002 * Company: Grupo ANTS - Proyecto MIMICS * @author Humberto Martinez Barbera (humberto@um.es) * @author Juan Pedro Canovas Qui–onero (juanpe@dif.um.es) * @version 1.0 */package devices.drivers.camera;import java.util.*;public class Camera {	private String				clase;	private String				port;		// Constructors	public static Camera getCamera (String props) throws CameraException	{		Camera			cam;		String			cname;		String			param;		Class			clase;		try		{   				cname	= props.substring (0,props.indexOf("|"));			param	= props.substring (props.indexOf("|")+1,props.length());			clase	= Class.forName (cname);        			System.out.println ("Camera: initialising "+cname+" with "+param+".");        			cam		= (Camera) clase.newInstance ();			cam.setType (cname);			cam.setConnection (param);			cam.initialise (param);        		} catch (Exception e) { throw new CameraException ("(getCamera) "+e.toString ()); }				return cam;		}		// Accessors	public void			setConnection (String port)			{ this.port = port; }		public String		getConnection ()					{ return port; }	public void			setType (String clase)				{ this.clase = clase; }	public String		getType ()							{ return clase; }		// Instance methods	public void initialise (String param) throws CameraException	{		return;	}		public boolean send (Comando comando)     {         		return (true);    }        public boolean send (Comando comando, int numero)     {        return (true);    }	public boolean send (Comando comando, int param1, int param2)	{		return (true);	}	public boolean send (Comando comando, int param1,int param2,int param3)	{		return (true);	}         	public void close () throws CameraException   	{   		return;   	}/** This method must return a collection with all the groups of commands  * that the camera implements */	public Collection getCommandGroups()	{		return null;	}	/** Returns true if the command is avaiable for the camera */	public boolean isAvaiable(Comando comando)	{		return false;	}		}