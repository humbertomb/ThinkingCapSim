/* * (c) 2002 Humberto Martinez, Juan Pedro Canovas Quiñonero */ package tc.coord;import java.util.*;import tc.vrobot.*;import tc.modules.*;import tc.fleet.*;import tc.shared.lps.lpo.*;import tclib.utils.fusion.*;import devices.pos.*;public class RobotList extends VehicleList{	public final static int			MAXROBOTS	= 	20;		protected int					rindex;    protected Hashtable				fdesc;    protected Hashtable				goal;    protected Hashtable				rrdata;	protected Hashtable				rdatainfo;	protected Hashtable				rlpos;    protected Hashtable				status;   			// Constructors    public RobotList ()	{		this (MAXROBOTS);			}	    public RobotList (int n)	{		super (n);				fdesc		= new Hashtable(n);		goal			= new Hashtable(n);		rrdata 		= new Hashtable(n);		rdatainfo 	= new Hashtable(n);		rlpos		= new Hashtable(n);		status 		= new Hashtable(n);			columnNames	= new String []{ "Robot", "Position", "Status" };		rindex		= 0;    }        // Instance methods        public boolean add (String id, RobotDesc robotdesc, FusionDesc fusiondesc)    {    	fdesc.put (id, fusiondesc);    	if (rdesc.put (id,robotdesc) == null) // Is it a new config??    	{    		robotsid.add(id);    		rcol.put (id,colors[indcolor]);   			indcolor = (indcolor+1)%colors.length;   			   			   			fireTableRowsInserted (rindex,rindex);   			rindex++;   			return (true);    	}    	return (false);    }        public void delete (String robotkey)    {    	super.delete (robotkey);    	    	if (rdesc.containsKey (robotkey))		{ 			fdesc.remove (robotkey);			goal.remove (robotkey);			rrdata.remove (robotkey);			rdatainfo.remove (robotkey);			rlpos.remove (robotkey);			status.remove (robotkey);			fireTableDataChanged();		}	}        public boolean update (String id, Position gpos)    {    	if (!rdesc.containsKey (id))    		return false;    	goal.put (id, gpos);    	return true;    }        public boolean update (String id, RobotData robotdata)    {    	if (!rdesc.containsKey (id))     		return false;     	rrdata.put (id, robotdata);    			fireTableDataChanged();    	return true;    }       public boolean update (String id, MonitorData pdata, LPO[] lpos, String rdinfo)    {    	if (!rdesc.containsKey (id))    		return false;    	rpdata.put (id, pdata);    	rlpos.put (id, lpos);    	rdatainfo.put (id, rdinfo);    			fireTableDataChanged();    	return true;    }        public boolean update (String id, String newstatus)    {    	if (!rdesc.containsKey (id))     		return false;    	status.put (id, newstatus);    			fireTableDataChanged();    	return true;    }       	public String getName (int i)	{	   return (String) robotsid.get (i);	}    	public RobotDesc getDesc (int i)	{	   return ((RobotDesc)rdesc.get((String)robotsid.get(i)));	}    	public RobotDesc getDesc (String id)	{	   return ((RobotDesc)rdesc.get(id));		}        public FusionDesc getFusion (int i)    {    	return ((FusionDesc)fdesc.get((String)robotsid.get(i)));    }        public FusionDesc getFusion (String id)    {    	return ((FusionDesc)fdesc.get(id));    }        public Position getGoal (int i)    {    	return ((Position) goal.get((String)robotsid.get(i)));    }        public Position getGoal (String id)    {    	return ((Position) goal.get(id));    }        public RobotData getRData (int i)    {    	return ((RobotData)rrdata.get((String)robotsid.get(i)));    }        public RobotData getRData (String id)    {    	return ((RobotData)rrdata.get(id));    }        public MonitorData getMData (int i)    {    	return ((MonitorData)rpdata.get((String)robotsid.get(i)));     }        public MonitorData getMData (String id)    {    	return ((MonitorData)rpdata.get(id));    }        public LPO[] getLPOs (int i)    {    	return ((LPO[]) rlpos.get ((String) robotsid.get (i)));     }        public LPO[] getLPOs (String id)    {    	return ((LPO[]) rlpos.get (id));    }        public String toString ()    {    	return (new String ("\tRobotlist content: "+robotsid+","+rdesc+", "+rcol));    }        //***************************    //TABLE MODEL IMPLEMENTATION    //***************************  	public Object getValueAt(int row, int column)  	{  		Object obj = null;  		  		switch (column)  		{  			case 0:   					obj = robotsid.get (row);  					break;  							  			case 1:    					obj = rdatainfo.get((String)robotsid.get (row)); 					break;					  					  			case 2:   					obj = status.get((String)robotsid.get (row));  					break;   					 			  			default: break;  		}  		  		if (obj == null) return new String ("N/A"); 		  		return obj;  	}	}